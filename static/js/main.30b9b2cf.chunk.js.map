{"version":3,"sources":["styles.js","redux/date/actions.js","components/calendar/styles.js","components/calendar/index.jsx","redux/screen/actions.js","components/board/styles.js","components/board/index.jsx","components/write/styles.js","components/write/first_page/styles.js","components/write/first_page/index.jsx","components/write/second_page/styles.js","components/write/second_page/index.jsx","components/write/index.jsx","App.js","reportWebVitals.js","redux/date/reducer.js","redux/screen/reducer.js","redux/store.js","index.js"],"names":["Container","styled","div","Card","SET_DATE","setDate","payload","type","Header","Days","Dates","days","Calendar","dispatch","useDispatch","date","useSelector","state","useState","Date","today","getFullYear","getMonth","firstDate","setFirstDate","dates","setDates","useEffect","console","log","lastDate","newDates","i","getDay","getDate","onClickPrev","useCallback","onClickNext","onClickDate","v","goToday","dayList","map","day","className","undefined","dateList","record","window","localStorage","getItem","toLocaleDateString","getTime","current","onClick","SET_SCREEN","setScreen","Controls","Text","RecordsList","RecordsItem","Board","screen","records","setRecords","newRecords","JSON","parse","expandRecord","e","rotate","currentTarget","getElementsByClassName","recordDetails","parentNode","style","maxHeight","transform","opacity","length","removeRecord","key","index","findIndex","element","splice","removeItem","setItem","stringify","recordsList","details","detailsList","detail","name","weight","reps","sets","exercise","time","Slider","ExercisesList","ExercisesItem","AddExercise","PageControls","FirstPage","movePage","setExercise","exerciseName","setExerciseName","exercises","setExercises","getExercises","addExercise","find","alert","newExercises","removeExercise","exercisesList","placeholder","value","onChange","target","Time","AddDetail","DetailsList","DetailsItem","SecondPage","setTime","setDetails","addRecord","detailName","setDetailName","detailWeight","setDetailWeight","detailReps","setDetailReps","detailSets","setDetailSets","onClickAddDetail","removeDetail","newDetails","onClickFinish","maxLength","Write","sliderRef","useRef","page","left","newRecord","push","ref","App","cardRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","setHours","dateReducer","action","screenReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30b9b2cf.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  padding: 50px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  perspective: 2000px;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  position: relative;\r\n  width: 1200px;\r\n  height: 900px;\r\n  border-radius: 30px;\r\n  background-color: white;\r\n  transition: transform 1s;\r\n  transform-style: preserve-3d;\r\n  box-shadow: 0 20px 20px rgba(0, 0, 0, 0.5);\r\n\r\n  .front {\r\n    z-index: 1;\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-gap: 50px;\r\n\r\n    > div {\r\n      border: 1px solid lightgray;\r\n      border-radius: 30px;\r\n    }\r\n  }\r\n\r\n  .back {\r\n    transform: rotateY(180deg);\r\n  }\r\n\r\n  .front,\r\n  .back {\r\n    width: calc(100% - 100px);\r\n    height: calc(100% - 100px);\r\n    padding: 50px;\r\n    position: absolute;\r\n    backface-visibility: hidden;\r\n  }\r\n`;\r\n","export const SET_DATE = \"SET_DATE\";\r\n\r\nexport const setDate = (payload) => {\r\n  return {\r\n    type: SET_DATE,\r\n    payload,\r\n  };\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  .header-button {\r\n    width: calc(100% / 7);\r\n    display: flex;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    :hover {\r\n      color: #b4b4b4;\r\n    }\r\n  }\r\n\r\n  .header-date {\r\n    font-size: 1.3rem;\r\n    cursor: pointer;\r\n    :hover {\r\n      color: #00b400;\r\n      :after {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Days = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .saturday {\r\n    color: #0000b4;\r\n  }\r\n\r\n  .sunday {\r\n    color: #b40000;\r\n  }\r\n`;\r\n\r\nexport const Dates = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  grid-template-rows: repeat(6, 100px);\r\n  align-items: center;\r\n  justify-items: center;\r\n\r\n  div {\r\n    width: 50px;\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 50%;\r\n\r\n    :hover {\r\n      color: #b4b4b4;\r\n    }\r\n  }\r\n\r\n  .today {\r\n    border: 1px solid #00b400;\r\n  }\r\n\r\n  .isIn {\r\n    position: relative;\r\n  }\r\n\r\n  .isIn::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: -10px;\r\n    width: 50%;\r\n    height: 2px;\r\n    background-color: #00b400;\r\n  }\r\n\r\n  .current {\r\n    background-color: #00b400;\r\n    color: white;\r\n  }\r\n`;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setDate } from \"../../redux/date/actions\";\r\n\r\nimport { Container, Header, Days, Dates } from \"./styles\";\r\n\r\nconst days = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n\r\nconst Calendar = () => {\r\n  const dispatch = useDispatch();\r\n  const date = useSelector((state) => state.date);\r\n\r\n  const [firstDate, setFirstDate] = useState(\r\n    new Date(date.today.getFullYear(), date.today.getMonth(), 1)\r\n  );\r\n  const [dates, setDates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(date);\r\n  }, [date]);\r\n\r\n  useEffect(() => {\r\n    const lastDate = new Date(\r\n      firstDate.getFullYear(),\r\n      firstDate.getMonth() + 1,\r\n      0\r\n    );\r\n    const newDates = [];\r\n    for (let i = 0; i < firstDate.getDay(); i++) {\r\n      newDates[i] = null;\r\n    }\r\n    for (let i = 0; i < lastDate.getDate(); i++) {\r\n      newDates[i + firstDate.getDay()] = new Date(\r\n        lastDate.getFullYear(),\r\n        lastDate.getMonth(),\r\n        i + 1\r\n      );\r\n    }\r\n    setDates(newDates);\r\n  }, [firstDate]);\r\n\r\n  const onClickPrev = useCallback(() => {\r\n    setFirstDate(new Date(firstDate.getFullYear(), firstDate.getMonth() - 1));\r\n  }, [firstDate]);\r\n\r\n  const onClickNext = useCallback(() => {\r\n    setFirstDate(new Date(firstDate.getFullYear(), firstDate.getMonth() + 1));\r\n  }, [firstDate]);\r\n\r\n  const onClickDate = useCallback((v) => {\r\n    dispatch(setDate(v));\r\n  }, []);\r\n\r\n  const goToday = useCallback(() => {\r\n    setFirstDate(new Date(date.today.getFullYear(), date.today.getMonth(), 1));\r\n    dispatch(setDate(date.today));\r\n  }, []);\r\n\r\n  const dayList = days.map((day) => {\r\n    const className =\r\n      day === \"토\" ? \"saturday\" : day === \"일\" ? \"sunday\" : undefined;\r\n    return (\r\n      <div key={day} className={className}>\r\n        {day}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const dateList = dates.map((v, i) => {\r\n    let className = \"\";\r\n    if (v) {\r\n      const record = window.localStorage.getItem(v.toLocaleDateString());\r\n      if (date.today.getTime() === v.getTime()) className = \"today\";\r\n      if (date.current.getTime() === v.getTime()) className += \" current\";\r\n      if (record) className += \" isIn\";\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={className || undefined}\r\n        key={i}\r\n        onClick={v && (() => onClickDate(v))}\r\n      >\r\n        {v && v.getDate()}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <div className=\"header-button\" onClick={onClickPrev}>\r\n          이전\r\n        </div>\r\n        <div\r\n          className=\"header-date\"\r\n          onClick={goToday}\r\n        >{`${firstDate.getFullYear()}년 ${firstDate.getMonth() + 1}월`}</div>\r\n        <div className=\"header-button\" onClick={onClickNext}>\r\n          다음\r\n        </div>\r\n      </Header>\r\n      <Days>{dayList}</Days>\r\n      <Dates>{dateList}</Dates>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","export const SET_SCREEN = \"SET_SCREEN\";\r\n\r\nexport const setScreen = (payload) => {\r\n  return {\r\n    type: SET_SCREEN,\r\n    payload,\r\n  };\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Controls = styled.div`\r\n  width: calc(100% - 100px);\r\n  height: 100px;\r\n  padding: 0 50px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n\r\n  > div {\r\n    cursor: pointer;\r\n    :hover {\r\n      color: #00b400;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  padding-left: 50px;\r\n  font-size: 1.4rem;\r\n  font-weight: bold;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const RecordsList = styled.div`\r\n  width: 100%;\r\n  height: 600px;\r\n  overflow: auto;\r\n`;\r\n\r\nexport const RecordsItem = styled.div`\r\n  .record {\r\n    position: relative;\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n\r\n    height: 100px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .expand-button {\r\n      position: relative;\r\n      width: 50px;\r\n      height: 50px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      transition: background-color 0.1s;\r\n\r\n      :hover {\r\n        > div {\r\n          background-color: #00b400;\r\n        }\r\n      }\r\n\r\n      > div {\r\n        position: absolute;\r\n        width: 12px;\r\n        height: 2px;\r\n        background-color: #b4b4b4;\r\n      }\r\n\r\n      .rotate {\r\n        transform: rotate(90deg);\r\n        transition: transform 0.2s, opacity 0.2s;\r\n      }\r\n    }\r\n\r\n    .available {\r\n      cursor: pointer;\r\n    }\r\n\r\n    .remove-button {\r\n      position: absolute;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      width: 50px;\r\n      height: 50px;\r\n      right: 0;\r\n      cursor: pointer;\r\n      transition: 0.1s;\r\n      > div {\r\n        position: absolute;\r\n        width: 12px;\r\n        height: 2px;\r\n        background-color: #b40000;\r\n      }\r\n      :hover {\r\n        background-color: #b40000;\r\n        > div {\r\n          background-color: #ffffff;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .record-details {\r\n    max-height: 0;\r\n    overflow: hidden;\r\n    transition: 0.5s;\r\n    padding-left: 50px;\r\n    background-color: #00b400;\r\n    color: white;\r\n  }\r\n\r\n  .record-detail {\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { setDate } from \"../../redux/date/actions\";\r\nimport { setScreen } from \"../../redux/screen/actions\";\r\n\r\nimport {\r\n  Container,\r\n  Header,\r\n  Controls,\r\n  Text,\r\n  RecordsList,\r\n  RecordsItem,\r\n} from \"./styles\";\r\n\r\nconst Board = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const date = useSelector((state) => state.date);\r\n  const screen = useSelector((state) => state.screen);\r\n\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const newRecords =\r\n      JSON.parse(\r\n        window.localStorage.getItem(date.current.toLocaleDateString())\r\n      ) || [];\r\n    setRecords(newRecords);\r\n  }, [date, screen]);\r\n\r\n  const expandRecord = useCallback((e) => {\r\n    const rotate = e.currentTarget.getElementsByClassName(\"rotate\")[0];\r\n    const recordDetails =\r\n      e.currentTarget.parentNode.parentNode.getElementsByClassName(\r\n        \"record-details\"\r\n      )[0];\r\n\r\n    if (recordDetails.style.maxHeight) {\r\n      recordDetails.style.maxHeight = \"\";\r\n      rotate.style.transform = \"rotate(90deg)\";\r\n      rotate.style.opacity = \"1\";\r\n    } else {\r\n      recordDetails.style.maxHeight = `${\r\n        recordDetails.getElementsByClassName(\"record-detail\").length * 50\r\n      }px`;\r\n      rotate.style.transform = \"rotate(180deg)\";\r\n      rotate.style.opacity = \"0\";\r\n    }\r\n  }, []);\r\n\r\n  const removeRecord = useCallback(\r\n    (key) => {\r\n      const newRecords = [...records];\r\n      const index = newRecords.findIndex((element) => element.key === key);\r\n      if (index === -1) return;\r\n\r\n      newRecords.splice(index, 1);\r\n      if (newRecords.length === 0) {\r\n        window.localStorage.removeItem(date.current.toLocaleDateString());\r\n      } else {\r\n        window.localStorage.setItem(\r\n          date.current.toLocaleDateString(),\r\n          JSON.stringify(newRecords)\r\n        );\r\n      }\r\n      dispatch(setDate(new Date(date.current)));\r\n    },\r\n    [date, records]\r\n  );\r\n\r\n  const recordsList = records.map((record) => {\r\n    const className = record.details.length\r\n      ? \"expand-button available\"\r\n      : \"expand-button\";\r\n\r\n    const detailsList = record.details.map((detail) => {\r\n      return (\r\n        <div\r\n          className=\"record-detail\"\r\n          key={detail.key}\r\n        >{`${detail.name} ${detail.weight}kg ${detail.reps} X ${detail.sets}`}</div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <RecordsItem key={record.key}>\r\n        <div className=\"record\">\r\n          <div\r\n            className={className}\r\n            onClick={(e) => {\r\n              if (record.details.length) expandRecord(e);\r\n            }}\r\n          >\r\n            {!!record.details.length && (\r\n              <>\r\n                <div />\r\n                <div className=\"rotate\" />\r\n              </>\r\n            )}\r\n          </div>\r\n          <div>\r\n            {record.exercise} ({record.time}분)\r\n          </div>\r\n          <div\r\n            className=\"remove-button\"\r\n            onClick={() => removeRecord(record.key)}\r\n          >\r\n            <div />\r\n          </div>\r\n        </div>\r\n        {!!record.details.length && (\r\n          <div className=\"record-details\">{detailsList}</div>\r\n        )}\r\n      </RecordsItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Header>{`${date.current.getFullYear()}년 ${\r\n        date.current.getMonth() + 1\r\n      }월 ${date.current.getDate()}일`}</Header>\r\n      <Controls>\r\n        <div onClick={() => dispatch(setScreen(1))}>운동 기록하기</div>\r\n      </Controls>\r\n      {records.length ? (\r\n        <RecordsList>{recordsList}</RecordsList>\r\n      ) : (\r\n        <Text>아직 기록된 운동이 없습니다.</Text>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Slider = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100% - 100px);\r\n  overflow: hidden;\r\n\r\n  > div {\r\n    position: absolute;\r\n    width: fit-content;\r\n    left: 0;\r\n    display: flex;\r\n    transition: 0.8s;\r\n\r\n    > div {\r\n      width: 1100px;\r\n      :not(:last-child) {\r\n        margin-right: 100px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  padding-left: 50px;\r\n`;\r\n\r\nexport const ExercisesList = styled.div`\r\n  width: 100%;\r\n  height: 400px;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-gap: 50px;\r\n`;\r\n\r\nexport const ExercisesItem = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .exercise-name {\r\n    font-size: 3rem;\r\n    font-weight: bold;\r\n    color: gray;\r\n\r\n    :hover {\r\n      color: #00b400;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .remove-button {\r\n    color: lightgray;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    :hover {\r\n      color: #b40000;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddExercise = styled.div`\r\n  padding-left: 50px;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n\r\n  > input {\r\n    width: 300px;\r\n    height: 50px;\r\n    text-align: center;\r\n    margin-left: 30px;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    border: 0;\r\n    border-bottom: 1px solid lightgray;\r\n    outline: none;\r\n\r\n    :hover,\r\n    :focus {\r\n      border-color: #b4b4b4;\r\n    }\r\n  }\r\n\r\n  .add-button {\r\n    cursor: pointer;\r\n    :hover {\r\n      color: #b4b4b4;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PageControls = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  > div {\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      color: #b4b4b4;\r\n    }\r\n  }\r\n`;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setScreen } from \"../../../redux/screen/actions\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  ExercisesList,\r\n  ExercisesItem,\r\n  AddExercise,\r\n  PageControls,\r\n} from \"./styles\";\r\n\r\nconst FirstPage = ({ movePage, setExercise }) => {\r\n  const dispatch = useDispatch();\r\n  const [exerciseName, setExerciseName] = useState(\"\");\r\n  const [exercises, setExercises] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getExercises();\r\n  }, []);\r\n\r\n  const getExercises = useCallback(() => {\r\n    const exercises = JSON.parse(window.localStorage.getItem(\"exercises\"));\r\n    if (exercises) setExercises(exercises);\r\n  }, []);\r\n\r\n  const addExercise = useCallback(() => {\r\n    const find = exercises.find((element) => element === exerciseName);\r\n    if (find) return window.alert(\"이미 목록에 있는 운동입니다.\");\r\n    const newExercises =\r\n      exercises.length === 0 ? [exerciseName] : [...exercises, exerciseName];\r\n    window.localStorage.setItem(\"exercises\", JSON.stringify(newExercises));\r\n    setExerciseName(\"\");\r\n    getExercises();\r\n  }, [exercises, exerciseName]);\r\n\r\n  const removeExercise = useCallback(\r\n    (exercise) => {\r\n      const newExercises = [...exercises];\r\n      const index = newExercises.findIndex((element) => element === exercise);\r\n      newExercises.splice(index, 1);\r\n      window.localStorage.setItem(\"exercises\", JSON.stringify(newExercises));\r\n      getExercises();\r\n    },\r\n    [exercises]\r\n  );\r\n\r\n  const exercisesList = exercises.map((exercise) => {\r\n    return (\r\n      <ExercisesItem key={exercise}>\r\n        <div\r\n          className=\"exercise-name\"\r\n          onClick={() => {\r\n            setExercise(exercise);\r\n            movePage(1);\r\n          }}\r\n        >\r\n          {exercise}\r\n        </div>\r\n        <div className=\"remove-button\" onClick={() => removeExercise(exercise)}>\r\n          삭제\r\n        </div>\r\n      </ExercisesItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Header>어떤 운동을 했나요?</Header>\r\n      <ExercisesList>{exercisesList}</ExercisesList>\r\n      <AddExercise>\r\n        <div>목록에 새로운 운동 추가</div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"운동 이름을 입력해주세요\"\r\n          value={exerciseName}\r\n          onChange={(e) => setExerciseName(e.target.value)}\r\n        />\r\n        <div className=\"add-button\" onClick={addExercise}>\r\n          추가\r\n        </div>\r\n      </AddExercise>\r\n      <PageControls>\r\n        <div\r\n          onClick={() => {\r\n            setExerciseName(\"\");\r\n            dispatch(setScreen(0));\r\n          }}\r\n        >\r\n          돌아가기\r\n        </div>\r\n      </PageControls>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FirstPage;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 50px;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Header2 = styled.div`\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 50px;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Time = styled.div`\r\n  height: 100px;\r\n  padding-left: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n\r\n  > input {\r\n    width: 100px;\r\n    height: 50px;\r\n    text-align: center;\r\n    border: 0;\r\n    border-bottom: 1px solid lightgray;\r\n    outline: none;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    margin-left: 30px;\r\n  }\r\n  > input:hover,\r\n  > input:focus {\r\n    border-color: gray;\r\n  }\r\n`;\r\n\r\nexport const AddDetail = styled.div`\r\n  padding-left: 50px;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n\r\n  > input {\r\n    width: 100px;\r\n    height: 50px;\r\n    text-align: center;\r\n    border: 0;\r\n    border-bottom: 1px solid lightgray;\r\n    outline: none;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    margin-left: 30px;\r\n\r\n    :hover,\r\n    :focus {\r\n      border-color: gray;\r\n    }\r\n  }\r\n\r\n  .input-detail-name {\r\n    width: 300px;\r\n  }\r\n\r\n  .add-button {\r\n    margin-left: 30px;\r\n    cursor: pointer;\r\n    :hover {\r\n      color: #b4b4b4;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DetailsList = styled.div`\r\n  width: calc(100% - 100px);\r\n  padding-left: 50px;\r\n  height: 300px;\r\n  overflow: auto;\r\n`;\r\n\r\nexport const DetailsItem = styled.div`\r\n  display: flex;\r\n  height: 80px;\r\n  align-items: center;\r\n  font-size: 1.1rem;\r\n\r\n  .remove-button {\r\n    margin-left: 30px;\r\n    cursor: pointer;\r\n    :hover {\r\n      color: #b40000;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PageControls = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  justify-items: center;\r\n  align-items: center;\r\n\r\n  > div {\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    :hover {\r\n      color: #b4b4b4;\r\n    }\r\n  }\r\n`;\r\n","import { useCallback, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Time,\r\n  AddDetail,\r\n  DetailsList,\r\n  DetailsItem,\r\n  PageControls,\r\n} from \"./styles\";\r\n\r\nconst SecondPage = ({\r\n  exercise,\r\n  movePage,\r\n  time,\r\n  setTime,\r\n  details,\r\n  setDetails,\r\n  addRecord,\r\n}) => {\r\n  const [detailName, setDetailName] = useState(\"\");\r\n  const [detailWeight, setDetailWeight] = useState(\"\");\r\n  const [detailReps, setDetailReps] = useState(\"\");\r\n  const [detailSets, setDetailSets] = useState(\"\");\r\n\r\n  const onClickAddDetail = useCallback(() => {\r\n    setDetails([\r\n      ...details,\r\n      {\r\n        key: new Date().getTime(),\r\n        name: detailName,\r\n        weight: detailWeight,\r\n        reps: detailReps,\r\n        sets: detailSets,\r\n      },\r\n    ]);\r\n    setDetailName(\"\");\r\n    setDetailWeight(\"\");\r\n    setDetailReps(\"\");\r\n    setDetailSets(\"\");\r\n  }, [details, detailName, detailWeight, detailReps, detailSets]);\r\n\r\n  const removeDetail = useCallback(\r\n    (detail) => {\r\n      const newDetails = [...details];\r\n      const index = newDetails.findIndex(\r\n        (element) => element.name === detail.name\r\n      );\r\n      newDetails.splice(index, 1);\r\n      setDetails(newDetails);\r\n    },\r\n    [details]\r\n  );\r\n\r\n  const onClickFinish = useCallback(() => {\r\n    setDetailName(\"\");\r\n    setDetailWeight(\"\");\r\n    setDetailReps(\"\");\r\n    setDetailSets(\"\");\r\n    addRecord();\r\n  }, [addRecord]);\r\n\r\n  const detailsList = details.map((detail) => {\r\n    return (\r\n      <DetailsItem key={detail.key}>\r\n        <div>{`${detail.name} ${detail.weight}kg ${detail.reps} X ${detail.sets}`}</div>\r\n        <div className=\"remove-button\" onClick={() => removeDetail(detail)}>\r\n          삭제\r\n        </div>\r\n      </DetailsItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Header>{exercise}</Header>\r\n      <Time>\r\n        <div>운동한 시간</div>\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"3\"\r\n          value={time}\r\n          onChange={(e) => setTime(e.target.value)}\r\n        />\r\n        <div>분</div>\r\n      </Time>\r\n      <AddDetail>\r\n        <div>세부운동 추가</div>\r\n        <input\r\n          className=\"input-detail-name\"\r\n          placeholder=\"운동 이름\"\r\n          type=\"text\"\r\n          value={detailName}\r\n          onChange={(e) => setDetailName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"3\"\r\n          placeholder=\"KG\"\r\n          value={detailWeight}\r\n          onChange={(e) => setDetailWeight(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"2\"\r\n          placeholder=\"REPS\"\r\n          value={detailReps}\r\n          onChange={(e) => setDetailReps(e.target.value)}\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"2\"\r\n          placeholder=\"SETS\"\r\n          value={detailSets}\r\n          onChange={(e) => setDetailSets(e.target.value)}\r\n        />\r\n        <div className=\"add-button\" onClick={onClickAddDetail}>\r\n          추가\r\n        </div>\r\n      </AddDetail>\r\n\r\n      <DetailsList>{detailsList}</DetailsList>\r\n      <PageControls>\r\n        <div onClick={() => movePage(0)}>이전</div>\r\n        <div onClick={onClickFinish}>완료</div>\r\n      </PageControls>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SecondPage;\r\n","import { useState, useCallback, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setScreen } from \"../../redux/screen/actions\";\r\nimport { Container, Header, Slider } from \"./styles\";\r\nimport FirstPage from \"./first_page\";\r\nimport SecondPage from \"./second_page\";\r\n\r\nconst Write = () => {\r\n  const dispatch = useDispatch();\r\n  const date = useSelector((state) => state.date);\r\n\r\n  const sliderRef = useRef();\r\n\r\n  const [exercise, setExercise] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n  const [details, setDetails] = useState([]);\r\n\r\n  const movePage = useCallback((page) => {\r\n    sliderRef.current.style.left = `-${page * 1200}px`;\r\n  }, []);\r\n\r\n  const addRecord = useCallback(() => {\r\n    if (!time) return window.alert(\"운동한 시간을 입력해주세요\");\r\n\r\n    const newRecord = {\r\n      key: new Date().getTime(),\r\n      exercise,\r\n      time,\r\n      details,\r\n    };\r\n\r\n    let record = JSON.parse(\r\n      window.localStorage.getItem(date.current.toLocaleDateString())\r\n    );\r\n    if (record) record.push(newRecord);\r\n    else record = [newRecord];\r\n    window.localStorage.setItem(\r\n      date.current.toLocaleDateString(),\r\n      JSON.stringify(record)\r\n    );\r\n\r\n    movePage(0);\r\n    setExercise(\"\");\r\n    setTime(\"\");\r\n    setDetails([]);\r\n    dispatch(setScreen(0));\r\n  }, [exercise, time, details]);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>{`${date.current.getFullYear()}년 ${\r\n        date.current.getMonth() + 1\r\n      }월 ${date.current.getDate()}일`}</Header>\r\n      <Slider>\r\n        <div ref={sliderRef} className=\"slider\">\r\n          <FirstPage movePage={movePage} setExercise={setExercise} />\r\n          <SecondPage\r\n            movePage={movePage}\r\n            exercise={exercise}\r\n            time={time}\r\n            setTime={setTime}\r\n            details={details}\r\n            setDetails={setDetails}\r\n            addRecord={addRecord}\r\n          />\r\n        </div>\r\n      </Slider>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Write;\r\n","import { useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Container, Card } from \"./styles\";\nimport Calendar from \"./components/calendar\";\nimport Board from \"./components/board\";\nimport Write from \"./components/write\";\n\nfunction App() {\n  const screen = useSelector((state) => state.screen);\n  const cardRef = useRef();\n\n  useEffect(() => {\n    console.log(screen);\n    if (screen.current) cardRef.current.style.transform = \"rotateY(180deg)\";\n    else cardRef.current.style.transform = \"\";\n  }, [screen]);\n  return (\n    <Container>\n      <Card ref={cardRef} className=\"card\">\n        <div className=\"front\">\n          <Calendar />\n          <Board />\n        </div>\n        <div className=\"back\">\n          <Write />\n        </div>\n      </Card>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_DATE } from \"./actions\";\r\n\r\nconst initialState = {\r\n  today: new Date(new Date().setHours(0, 0, 0, 0)),\r\n  current: new Date(new Date().setHours(0, 0, 0, 0)),\r\n};\r\n\r\nconst dateReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DATE:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dateReducer;\r\n","import { SET_SCREEN } from \"./actions\";\r\n\r\nconst initialState = {\r\n  current: 0,\r\n};\r\n\r\nconst screenReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SCREEN:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default screenReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport dateReducer from \"./date/reducer\";\r\nimport screenReducer from \"./screen/reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  date: dateReducer,\r\n  screen: screenReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}